{"ast":null,"code":"var _jsxFileName = \"/home/am-pc-23/React/interviewPortal/src/component/Test.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { useParams, useNavigate, Link } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Test() {\n  _s();\n\n  const navigate = useNavigate(); // const {id}=useParams();\n\n  const saveradioval = e => {\n    let temp = parseInt(e.target.value);\n    let temo = ans;\n    temo[count] = temp;\n    setans(temo);\n    console.log(\"ans\", ans);\n    localStorage.setItem(\"selectedopt\", JSON.stringify(temo));\n    setcount5(prev => prev + 1);\n  };\n\n  const myfun = {\n    margin: \"10px\"\n  };\n\n  const checkoption = index => {\n    if (ans[count] === index) {\n      return true;\n    }\n\n    if (ans.length > 0 && ans[count] != null) {\n      for (let i = 0; i < 5; i++) {\n        if (typeof ans[count] === \"object\") {\n          //   console.log(\"hi\");\n          if (ans.length >= 0 && ans[count][i] === index) {\n            return true;\n          }\n        }\n      }\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"My Interview Portal\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-md-12\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"panel panel-default\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"panel-heading\",\n              children: data.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"panel-body\",\n              children: /*#__PURE__*/_jsxDEV(\"form\", {\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  children: [\"[\", count + 1, \"]\", question, \" \"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 57,\n                  columnNumber: 29\n                }, this), option.map((op, index) => {\n                  const function2 = optbutton === \"checkbox\" ? savecheckboxval : saveradioval;\n                  return /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"radio\",\n                    children: /*#__PURE__*/_jsxDEV(\"label\", {\n                      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                        type: optbutton,\n                        checked: checkoption(index),\n                        name: \"option\",\n                        value: index,\n                        onChange: function2\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 64,\n                        columnNumber: 37\n                      }, this), \" \", op]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 63,\n                      columnNumber: 33\n                    }, this)\n                  }, op, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 62,\n                    columnNumber: 29\n                  }, this);\n                })]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 56,\n                columnNumber: 25\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"panel-footer\",\n              children: [/*#__PURE__*/_jsxDEV(Link, {\n                to: `/Test/${data._id}/${data.questions[count]._id}`,\n                children: /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"btn btn-success\",\n                  disabled: count == 0,\n                  style: myfun,\n                  onClick: () => setpreviousQuestion(),\n                  children: \"Previous\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 78,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 77,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Link, {\n                to: `/Test/${data._id}/${data.questions[count]._id}`,\n                children: /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"btn btn-success\",\n                  disabled: count > data.questions.length - 2,\n                  onClick: () => {\n                    setNextQuestion();\n                    navigate(`/Test/${data._id}/${data.questions[count]._id}`);\n                  },\n                  children: \"Next\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 84,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 83,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Link, {\n                to: `/Finish`,\n                children: /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"pull-right btn btn-danger\",\n                  disabled: count < data.questions.length - 1,\n                  onClick: () => finish(),\n                  children: \"Finish\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 88,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 87,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Test, \"CzcTeTziyjMsSrAVmHuCCb6+Bfg=\", false, function () {\n  return [useNavigate];\n});\n\n_c = Test;\nexport default Test;\n\nvar _c;\n\n$RefreshReg$(_c, \"Test\");","map":{"version":3,"sources":["/home/am-pc-23/React/interviewPortal/src/component/Test.js"],"names":["React","useEffect","useState","useParams","useNavigate","Link","Test","navigate","saveradioval","e","temp","parseInt","target","value","temo","ans","count","setans","console","log","localStorage","setItem","JSON","stringify","setcount5","prev","myfun","margin","checkoption","index","length","i","data","name","question","option","map","op","function2","optbutton","savecheckboxval","_id","questions","setpreviousQuestion","setNextQuestion","finish"],"mappings":"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","sourcesContent":["import React,{useEffect, useState} from 'react'\nimport {useParams,useNavigate,Link} from \"react-router-dom\" \n\nfunction Test() {\n    const navigate=useNavigate();\n    // const {id}=useParams();\n\n        const saveradioval=(e)=>{\n\n\n            let temp=parseInt(e.target.value)\n            let temo=ans\n            temo[count]=temp\n            setans(temo)\n            console.log(\"ans\",ans);\n            localStorage.setItem(\"selectedopt\",JSON.stringify(temo))\n            setcount5(prev=>prev+1)\n        }\n        const myfun={\n          margin:\"10px\"\n        };\n        \n        const checkoption=(index)=>{\n              \n            if(ans[count]===index)\n            {\n                return true;\n            }\n            \n            if (ans.length > 0 &&ans[count]!=null) {\n                for (let i = 0; i < 5; i++) \n                {\n                    if (typeof ans[count] === \"object\") \n                    {\n                    //   console.log(\"hi\");\n                    if (ans.length >= 0 && ans[count][i] === index) \n                    {\n                      return true;\n                    }\n                  }\n                }\n              }\n        }\n\n\n    return (\n    <div>\n    <div className=\"container\">\n        <div className=\"row\">\n        <h1>My Interview Portal</h1>\n            \n            <div className=\"col-md-12\">\n                <div className=\"panel panel-default\">\n                    <div className=\"panel-heading\">{data.name}</div>\n                    <div className=\"panel-body\">\n                        <form>                \n                            <label>[{count+1}]{question} </label>\n                            {    \n                            option.map((op,index)=>{     \n                            const function2=optbutton===\"checkbox\" ? savecheckboxval : saveradioval  \n                            return(     \n                            <div className=\"radio\" key={op}>\n                                <label>\n                                    <input type={optbutton} \n                                    checked={checkoption(index)}\n                                    name=\"option\" \n                                    value={index} \n                                    onChange={function2}/> {op}\n                                </label>\n                            </div>\n                            );\n                            })    \n                        }                  \n                        </form>\n                    </div>\n                    <div className=\"panel-footer\">\n                    <Link to={`/Test/${data._id}/${data.questions[count]._id}`}>    \n                      <button className=\"btn btn-success\" disabled={count==0} style={myfun} onClick={()=>setpreviousQuestion()}\n                      >Previous</button>\n                        </Link>\n\n\n                    <Link to={`/Test/${data._id}/${data.questions[count]._id}`}>    \n                    <button className=\"btn btn-success\" disabled={count>data.questions.length-2} onClick={()=>{setNextQuestion();navigate(`/Test/${data._id}/${data.questions[count]._id}`)}}>Next</button>\n                    </Link>\n\n                    <Link to={`/Finish`}>    \n                        <button className=\"pull-right btn btn-danger\" disabled={count<data.questions.length-1} onClick={()=>finish()} >Finish</button>\n                        </Link>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n\n        {/* {(que.length==count && count!=0 ) ? complete() : \"\"} */}\n\n    </div>\n  )\n}\n\nexport default Test"]},"metadata":{},"sourceType":"module"}