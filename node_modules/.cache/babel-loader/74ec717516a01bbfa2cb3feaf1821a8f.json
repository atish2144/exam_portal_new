{"ast":null,"code":"var _jsxFileName = \"/home/am-pc-23/React/interviewPortal/src/component/Test.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { useParams, useNavigate, Link } from \"react-router-dom\";\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Test() {\n  _s();\n\n  const navigate = useNavigate();\n  const {\n    id\n  } = useParams();\n  console.log(\"exam\", id);\n  const [test, settest] = useState([]);\n  const [question, setQuestion] = useState(\"\");\n  const [count, setCount] = useState(0);\n  const [optbutton, setoptbutton] = useState(\"\"); // const[question,setquestion]=useState([])\n  // const[examId,setExamId]=useState(JSON.parse(localStorage.getItem(\"Exam_id\")))\n\n  useEffect(() => {\n    axios.get(\"https://dip-kaluse.github.io/examport/portal.json\").then(res => {\n      console.log(res.data);\n      const result = res.data.tests.filter((obj, index) => obj._id == id);\n      settest(result[0]);\n      const ind = result[0].questions.filter((obj, index) => {\n        if (obj._id === id) {\n          setCount(index);\n          return index;\n        }\n      });\n    }).catch(err => {\n      console.log(\"error\");\n    });\n  }, []);\n  useEffect(() => {\n    if (question != \"\" && test.questions[count].type === \"Multiple-Response\") {\n      setoptbutton(\"checkbox\");\n    } else {\n      setoptbutton(\"radio\");\n    }\n  });\n\n  const handleNextQuestion = () => {\n    setCount(prev => prev + 1);\n  };\n\n  const handlePreviosQuestion = () => {\n    setCount(prev => prev - 1);\n  };\n\n  const myfun = {\n    margin: \"10px\"\n  }; // console.log(\"a\",test);\n  // console.log(test!=null && test.length>0);\n  //   console.log(test.length!=0 && test.questions.length);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"My Interview Portal\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-md-12\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"panel panel-default\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"panel-heading\",\n              children: test.length != 0 && test.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"panel-body\",\n              children: /*#__PURE__*/_jsxDEV(\"form\", {\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  children: test.length != 0 && test.questions[count].questionText\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 77,\n                  columnNumber: 29\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"radio\",\n                  children: /*#__PURE__*/_jsxDEV(\"label\", {\n                    children: question != \"\" && test.questions[count].options.map((op, index) => {\n                      // const function2=optbutton===\"checkbox\" ? savecheckboxval : saveradioval  \n                      return /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"radio\",\n                        children: /*#__PURE__*/_jsxDEV(\"label\", {\n                          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                            type: optbutton // checked={checkoption(index)}\n                            ,\n                            name: \"option\",\n                            value: index // onChange={function2}\n\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 87,\n                            columnNumber: 37\n                          }, this), op]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 86,\n                          columnNumber: 33\n                        }, this)\n                      }, op, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 85,\n                        columnNumber: 29\n                      }, this);\n                    })\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 79,\n                    columnNumber: 33\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 78,\n                  columnNumber: 29\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 76,\n                columnNumber: 25\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"panel-footer\",\n              children: [/*#__PURE__*/_jsxDEV(Link, {\n                to: test.length != 0 && `/Test/${test._id}/${test.questions[count]._id}`,\n                children: /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"btn btn-success\",\n                  style: myfun,\n                  disabled: count == 0,\n                  onClick: () => {\n                    handlePreviosQuestion();\n                  },\n                  children: \"Previous\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 107,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 106,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Link, {\n                to: test.length != 0 && `/Test/${test._id}/${test.questions[count]._id}`,\n                children: /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"btn btn-success\",\n                  disabled: test.length != 0 && count > test.questions.length - 2,\n                  onClick: () => {\n                    handleNextQuestion();\n                  },\n                  children: \"Next\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 112,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 111,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Link, {\n                to: test.length != 0 && `/Test/${test._id}/${test.questions[count]._id}`,\n                children: /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"pull-right btn btn-danger\",\n                  disabled: test.length != 0 && count < test.questions.length - 1,\n                  children: \"Finish\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 116,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 115,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 4\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Test, \"NFQxPUUUidFzvyVh6kFx52glUNY=\", false, function () {\n  return [useNavigate, useParams];\n});\n\n_c = Test;\nexport default Test;\n\nvar _c;\n\n$RefreshReg$(_c, \"Test\");","map":{"version":3,"sources":["/home/am-pc-23/React/interviewPortal/src/component/Test.js"],"names":["React","useEffect","useState","useParams","useNavigate","Link","axios","Test","navigate","id","console","log","test","settest","question","setQuestion","count","setCount","optbutton","setoptbutton","get","then","res","data","result","tests","filter","obj","index","_id","ind","questions","catch","err","type","handleNextQuestion","prev","handlePreviosQuestion","myfun","margin","length","name","questionText","options","map","op"],"mappings":"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","sourcesContent":["import React,{useEffect, useState} from 'react'\nimport {useParams,useNavigate,Link} from \"react-router-dom\" \nimport axios from 'axios';\n\nfunction Test() {\n    const navigate=useNavigate();\n     const {id}=useParams();\n     console.log(\"exam\",id);\n    const[test,settest]=useState([])\n    const [question, setQuestion] = useState(\"\");\n    const[count,setCount]=useState(0)\n    const[optbutton,setoptbutton]=useState(\"\")\n    // const[question,setquestion]=useState([])\n    // const[examId,setExamId]=useState(JSON.parse(localStorage.getItem(\"Exam_id\")))\n\n\n    useEffect(() => {\n        axios.get(\"https://dip-kaluse.github.io/examport/portal.json\")\n        .then(res=>{\n            console.log(res.data)\n            const result=res.data.tests.filter((obj,index)=>obj._id==id)\n            settest(result[0]);\n      \n            const ind = result[0].questions.filter((obj, index) => {\n                if (obj._id === id)  {\n                  setCount(index);\n                  return index;\n                }\n              });\n        })\n        .catch(err=>{\n            console.log(\"error\");\n        })\n        }, [])\n\n        useEffect(() => {\n \n            if(question != \"\" && test .questions[count].type===\"Multiple-Response\")\n            {\n                setoptbutton(\"checkbox\")\n            }\n            else\n            {\n                setoptbutton(\"radio\")\n            }\n        },)\n    \n\n        const handleNextQuestion = () => {\n            setCount((prev) => prev + 1);\n          };\n\n          const handlePreviosQuestion = () => {\n            setCount((prev) => prev - 1);\n          };\n\n          const myfun={\n            margin:\"10px\"\n          };\n  \n\n        // console.log(\"a\",test);\n        // console.log(test!=null && test.length>0);\n        //   console.log(test.length!=0 && test.questions.length);\n\nreturn (\n    <div>\n   <div className=\"container\">\n        <div className=\"row\">\n            <h1>My Interview Portal</h1>\n            \n            <div className=\"col-md-12\">\n                <div className=\"panel panel-default\">\n                    <div className=\"panel-heading\">{test.length!=0 && test.name}</div>\n                    <div className=\"panel-body\">\n                        <form>\n                            <label>{test.length!=0 && test.questions[count].questionText}</label>\n                            <div className=\"radio\">\n                                <label>\n                                {    \n                                question != \"\" &&\n                                test.questions[count].options.map((op,index)=>{     \n                            // const function2=optbutton===\"checkbox\" ? savecheckboxval : saveradioval  \n                            return(     \n                            <div className=\"radio\" key={op}>\n                                <label>\n                                    <input type={optbutton} \n                                    // checked={checkoption(index)}\n                                    name=\"option\" \n                                    value={index} \n                                    // onChange={function2}\n                                    />\n                                     {op}\n                                </label>\n                            </div>\n                            );\n                            })    \n                        }\n   \n                                </label>\n                            </div>\n                        </form>\n                    </div>\n                    <div className=\"panel-footer\">\n\n                    <Link to={test.length!=0 && (`/Test/${test._id}/${test.questions[count]._id}`)}>    \n                    <button className=\"btn btn-success\" style={myfun} disabled={count==0} onClick={()=>{ handlePreviosQuestion()}}>Previous</button>\n                    </Link>   \n\n\n                    <Link to={test.length!=0 && (`/Test/${test._id}/${test.questions[count]._id}`)}>    \n                    <button className=\"btn btn-success\" disabled={test.length!=0 && count>test.questions.length-2} onClick={()=>{ handleNextQuestion()}}>Next</button>\n                    </Link>   \n\n                    <Link to={test.length!=0 && (`/Test/${test._id}/${test.questions[count]._id}`)}>    \n                    <button className=\"pull-right btn btn-danger\" disabled={test.length!=0 && count<test.questions.length-1} >Finish</button>\n                    </Link>   \n\n                        {/* <a href=\"finish.html\" className=\"pull-right btn btn-danger\">Finish</a> */}\n\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n\n        {/* {(que.length==count && count!=0 ) ? complete() : \"\"} */}\n\n    </div>\n  )\n}\n\nexport default Test"]},"metadata":{},"sourceType":"module"}